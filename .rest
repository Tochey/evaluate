@hostname = https://main.d34qxtpa1jstt.amplifyapp.com 
# https://main.d34qxtpa1jstt.amplifyapp.com 

# http://localhost:3000/

# --- Authentication ---
GET {{hostname}}/api/auth/me
Cookie: evaluate=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ3MGZkYWE4LTFhYTgtNGQ5MS1iOTk1LTJiYzYyYTY4ZjdjOCIsInJvbGUiOiJTVFVERU5UIiwiaWF0IjoxNjczMDQ1NTY3LCJleHAiOjE2NzMzMDQ3Njd9.yTrX_fsLXEwqcnlasPPh_JqIR6yrHiVafo70-psLQTA; Max-Age=604800; Path=/; SameSite=Strict

###
POST  {{hostname}}/api/ops/superuser/createFacultyCredentials
Content-Type: application/json

{
    "facultyId" : "1234",
    "fullname" : "Fatema Nafa",
    "password" : "fnafa123"
}

###
POST  {{hostname}}/api/auth/faculty/login
Content-Type: application/json

{
   "facultyId" : "1234",
    "password" : "fnafa123"
}

###

POST  {{hostname}}/api/auth/student/signup
Content-Type: application/json

{
   "fullname" : "Tochi Amanze",
   "username" : "tochi",
    "email" : "tochi@salemstate.edu",
    "password" : "tochi123"
}

###
POST  {{hostname}}/api/auth/student/login
Content-Type: application/json

{
   "email" : "tochi@salemstate.edu",
    "password" : "tochi123"
}


###
# --- Authentication ---
# --- Operations --- 

# --- Course ---
GET  {{hostname}}/api/ops/course/read

###
GET  {{hostname}}/api/ops/course/read/2463eff2-93d1-4b77-98a0-aa6a273f9aa9
###
DELETE   {{hostname}}/api/ops/course/delete

###
DELETE   {{hostname}}/api/ops/course/delete/b74db85d-7e6d-4de6-b90c-a9eab16d4240

###
POST  {{hostname}}/api/ops/course/create
Content-Type: application/json

{
    "coursename" : "Intro to Java",
    "academicyear" : "Spring 23",
    "academicterm" : "Fall 22/Spring 23",
    "learningObjectives" : "Understand the core principles of Object Oriented Programming (OOP)",
    "facultyId" : "1234"
}


### 
POST  {{hostname}}/api/ops/course/read/getEnrolledStudents/28b7593a-3569-4394-a137-221f5349cbe4
Content-Type: application/json 

# --- Course ---

# --- Activity ---

###
POST  {{hostname}}/api/ops/activity/create
Content-Type: application/json

{
    "topic" : "Average",
    "points" : 20,
    "numofattempts" : 1,
    "availablefrom" : "",
    "availableto" : "",
    "language" : "JAVA",
    "codingActivity" : {
        "question": "Write a Java method called (average) that takes an array of integers as a parameter and returns the average of all the integers in the array."
    },
    "learningObjectives": {
        "description" : "Properly learn how to write good code (filler again again)..."
    },
    "courseId" : "1281f484-2ecb-4452-bfd9-8e01fb9c0b79",
    "testCases" : "1 2 3\n4 5 9\n10 50 60\n100 100 200\n20 30 50\n4 4 8\n21 21 42\n 10 1 11\n20 20 40",
    "skeleton" : "import org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class SolutionTest {\n    @Test\n    public void testAdd1() {\n        Solution solution = new Solution();\n        int[] testArray = {};\n        double expected = 0.0;\n        double actual = solution.average(testArray);\n        assertEquals(expected, actual, 0.001);\n    }\n    @Test\n    public void testAdd2() {\n        Solution solution = new Solution();\n        int[] testArray = {-1, -2, -3, -4, -5};\n        double expected = -3.0;\n        double actual = solution.average(testArray);\n        assertEquals(expected, actual, 0.001);\n    }\n    @Test\n    public void testAdd3() {\n        Solution solution = new Solution();\n        int[] testArray = {Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE};\n        double expected = (double) Integer.MAX_VALUE;\n        double actual = solution.average(testArray);\n        assertEquals(expected, actual, 0.001);\n    }\n    @Test\n    public void testAdd4() {\n        Solution solution = new Solution();\n        int[] testArray = {Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MIN_VALUE};\n        double expected = (double) Integer.MIN_VALUE;\n        double actual = solution.average(testArray);\n        assertEquals(expected, actual, 0.001);\n    }\n  \n}"
}

###
POST  {{hostname}}/api/ops/activity/create
Content-Type: application/json

{
    "topic" : "vowels",
    "points" : 50,
    "numofattempts" : 1,
    "availablefrom" : "",
    "availableto" : "",
    "language" : "JAVA",
    "codingActivity" : {
        "question": "Write a Java method called (vowels) that takes a string as a parameter and returns the number of vowels in the string."
    },
    "learningObjectives": {
        "description" : "Properly learn how to write good code ().."
    },
    "courseId" : "1281f484-2ecb-4452-bfd9-8e01fb9c0b79",
    "testCases" : "1 2 3\n4 5 9\n10 50 60\n100 100 200\n20 30 50\n4 4 8\n21 21 42\n 10 1 11\n20 20 40",
    "skeleton" : "import org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class SolutionTest {\n    @Test\n    public void testAdd1() {\n        Solution solution = new Solution();\n        String testString = \"Hello, World!\";\n        int expected = 3;\n        int actual = solution.countVowels(testString);\n        assertEquals(expected, actual);\n    }\n    @Test\n    public void testAdd2() {\n        Solution solution = new Solution();\n        String testString = \"\";\n        int expected = 0;\n        int actual = solution.countVowels(testString);\n        assertEquals(expected, actual);\n    }\n    @Test\n    public void testAdd3() {\n        Solution solution = new Solution();\n        String testString = \"qwrtypsdfghjklzxcvbnm\";\n        int expected = 0;\n        int actual = solution.countVowels(testString);\n        assertEquals(expected, actual);\n    }\n    @Test\n    public void testAdd4() {\n        Solution solution = new Solution();\n        String testString = \"aeiou\";\n        int expected = 5;\n        int actual = solution.countVowels(testString);\n        assertEquals(expected, actual);\n    }\n  \n}"
}

###
POST  {{hostname}}/api/ops/activity/create
Content-Type: application/json

{
    "topic" : "two times",
    "points" : 50,
    "numofattempts" : 1,
    "availablefrom" : "",
    "availableto" : "",
    "language" : "JAVA",
    "codingActivity" : {
        "question": "Write a Java method called (twoArray) that takes a two-dimensional array of integers and returns the sum of all the elements in the array."
    },
    "learningObjectives": {
        "description" : "Properly learn how to write good code ().."
    },
    "courseId" : "1281f484-2ecb-4452-bfd9-8e01fb9c0b79",
    "testCases" : "1 2 3\n4 5 9\n10 50 60\n100 100 200\n20 30 50\n4 4 8\n21 21 42\n 10 1 11\n20 20 40",
    "skeleton" : "import org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class SolutionTest {\n    @Test\n    public void testArraySum() {\n        Solution solution = new Solution();\n        int[][] testArray = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int expected = 45;\n        int actual = solution.sumArray(testArray);\n        assertEquals(expected, actual);\n    }\n    \n    @Test\n    public void testEmptyArray() {\n        Solution solution = new Solution();\n        int[][] testArray = {};\n        int expected = 0;\n        int actual = solution.sumArray(testArray);\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testSingleElementArray() {\n        Solution solution = new Solution();\n        int[][] testArray = {{1}};\n        int expected = 1;\n        int actual = solution.sumArray(testArray);\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testNegativeElements() {\n        Solution solution = new Solution();\n        int[][] testArray = {{-1, -2, -3}, {-4, -5, -6}, {-7, -8, -9}};\n        int expected = -45;\n        int actual = solution.sumArray(testArray);\n        assertEquals(expected, actual);\n    }\n  \n}"
}

###
GET  {{hostname}}/api/ops/activity/read

###
GET {{hostname}}/api/ops/activity/read/85b0ee97-6c7d-4089-be53-8c50d7ff8940

###
DELETE {{hostname}}/api/ops/activity/delete/606ae7fa-49b2-43d8-ab4f-127edd86f75e

###
DELETE {{hostname}}/api/ops/activity/delete

# --- Activity ---

# --- Student ---
###
GET  {{hostname}}/api/ops/student/read 

###

POST  {{hostname}}/api/ops/course/update/enroll/67aeb67b-e0e1-4c23-8d66-946613e7c359
Content-Type: application/json

{
    "accessCode" : "6a51710c-06c7-47cf-9216-63ea072f4248"
}

###
GET  {{hostname}}/api/ops/student/read/getCount

###
GET {{hostname}}/api/ops/student/read/54c922ec-f46a-4fab-8f8f-dca012f7944d
###
# GET {{hostname}}/api/ops/student/delete

# --- Student ---

#--- Operations ---
###
GET {{hostname}}/api/ops/activity/read/submissions/64b69d82-0bce-4f26-bff8-c65e79c6df3a


###
POST  https://www.twitterbio.com/api/generate

{
    "prompt": "Write a method called (isEven) that takes in two int parameters and returns TRUE if one of them is an even number else return FALSE",
}
